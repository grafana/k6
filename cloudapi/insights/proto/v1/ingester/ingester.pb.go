// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: v1/ingester/ingester.proto

package ingester

import (
	k6 "go.k6.io/k6/cloudapi/insights/proto/v1/k6"
	trace "go.k6.io/k6/cloudapi/insights/proto/v1/trace"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchCreateRequestMetadatasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateRequestMetadataRequest `protobuf:"bytes,1,rep,name=Requests,proto3" json:"Requests,omitempty"`
}

func (x *BatchCreateRequestMetadatasRequest) Reset() {
	*x = BatchCreateRequestMetadatasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ingester_ingester_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateRequestMetadatasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateRequestMetadatasRequest) ProtoMessage() {}

func (x *BatchCreateRequestMetadatasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ingester_ingester_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateRequestMetadatasRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateRequestMetadatasRequest) Descriptor() ([]byte, []int) {
	return file_v1_ingester_ingester_proto_rawDescGZIP(), []int{0}
}

func (x *BatchCreateRequestMetadatasRequest) GetRequests() []*CreateRequestMetadataRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type CreateRequestMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestMetadata *k6.RequestMetadata `protobuf:"bytes,1,opt,name=RequestMetadata,proto3" json:"RequestMetadata,omitempty"`
}

func (x *CreateRequestMetadataRequest) Reset() {
	*x = CreateRequestMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ingester_ingester_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequestMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequestMetadataRequest) ProtoMessage() {}

func (x *CreateRequestMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ingester_ingester_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequestMetadataRequest.ProtoReflect.Descriptor instead.
func (*CreateRequestMetadataRequest) Descriptor() ([]byte, []int) {
	return file_v1_ingester_ingester_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRequestMetadataRequest) GetRequestMetadata() *k6.RequestMetadata {
	if x != nil {
		return x.RequestMetadata
	}
	return nil
}

type BatchCreateRequestMetadatasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestMetadatas []*k6.RequestMetadata `protobuf:"bytes,1,rep,name=RequestMetadatas,proto3" json:"RequestMetadatas,omitempty"`
}

func (x *BatchCreateRequestMetadatasResponse) Reset() {
	*x = BatchCreateRequestMetadatasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ingester_ingester_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateRequestMetadatasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateRequestMetadatasResponse) ProtoMessage() {}

func (x *BatchCreateRequestMetadatasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ingester_ingester_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateRequestMetadatasResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateRequestMetadatasResponse) Descriptor() ([]byte, []int) {
	return file_v1_ingester_ingester_proto_rawDescGZIP(), []int{2}
}

func (x *BatchCreateRequestMetadatasResponse) GetRequestMetadatas() []*k6.RequestMetadata {
	if x != nil {
		return x.RequestMetadatas
	}
	return nil
}

type BatchCreateSpansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateSpanRequest `protobuf:"bytes,1,rep,name=Requests,proto3" json:"Requests,omitempty"`
}

func (x *BatchCreateSpansRequest) Reset() {
	*x = BatchCreateSpansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ingester_ingester_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateSpansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateSpansRequest) ProtoMessage() {}

func (x *BatchCreateSpansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ingester_ingester_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateSpansRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateSpansRequest) Descriptor() ([]byte, []int) {
	return file_v1_ingester_ingester_proto_rawDescGZIP(), []int{3}
}

func (x *BatchCreateSpansRequest) GetRequests() []*CreateSpanRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type CreateSpanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Span *trace.Span `protobuf:"bytes,1,opt,name=Span,proto3" json:"Span,omitempty"`
}

func (x *CreateSpanRequest) Reset() {
	*x = CreateSpanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ingester_ingester_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpanRequest) ProtoMessage() {}

func (x *CreateSpanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ingester_ingester_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpanRequest.ProtoReflect.Descriptor instead.
func (*CreateSpanRequest) Descriptor() ([]byte, []int) {
	return file_v1_ingester_ingester_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSpanRequest) GetSpan() *trace.Span {
	if x != nil {
		return x.Span
	}
	return nil
}

type BatchCreateSpansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spans []*trace.Span `protobuf:"bytes,1,rep,name=Spans,proto3" json:"Spans,omitempty"`
}

func (x *BatchCreateSpansResponse) Reset() {
	*x = BatchCreateSpansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_ingester_ingester_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateSpansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateSpansResponse) ProtoMessage() {}

func (x *BatchCreateSpansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_ingester_ingester_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateSpansResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateSpansResponse) Descriptor() ([]byte, []int) {
	return file_v1_ingester_ingester_proto_rawDescGZIP(), []int{5}
}

func (x *BatchCreateSpansResponse) GetSpans() []*trace.Span {
	if x != nil {
		return x.Spans
	}
	return nil
}

var File_v1_ingester_ingester_proto protoreflect.FileDescriptor

var file_v1_ingester_ingester_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x69, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x6b, 0x36,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x1a, 0x1c, 0x76, 0x31, 0x2f, 0x6b, 0x36, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2f, 0x73, 0x70, 0x61, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x01, 0x0a, 0x22, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x08, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x6b, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x08, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x78, 0x0a, 0x1c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x0f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x69,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x6b, 0x36, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x81, 0x01, 0x0a, 0x23, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x10,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x6b, 0x36, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0x6d, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6b, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x4f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04,
	0x53, 0x70, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6b, 0x36, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x70,
	0x61, 0x6e, 0x52, 0x04, 0x53, 0x70, 0x61, 0x6e, 0x22, 0x58, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6b, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x69,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x05, 0x53, 0x70, 0x61,
	0x6e, 0x73, 0x32, 0xda, 0x02, 0x0a, 0x0f, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb2, 0x01, 0x0a, 0x1b, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x47, 0x2e, 0x6b, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x48, 0x2e, 0x6b, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x10,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x73,
	0x12, 0x3c, 0x2e, 0x6b, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x69, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d,
	0x2e, 0x6b, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x31, 0x5a, 0x2f, 0x67, 0x6f, 0x2e, 0x6b, 0x36, 0x2e, 0x69, 0x6f, 0x2f, 0x6b, 0x36, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_ingester_ingester_proto_rawDescOnce sync.Once
	file_v1_ingester_ingester_proto_rawDescData = file_v1_ingester_ingester_proto_rawDesc
)

func file_v1_ingester_ingester_proto_rawDescGZIP() []byte {
	file_v1_ingester_ingester_proto_rawDescOnce.Do(func() {
		file_v1_ingester_ingester_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_ingester_ingester_proto_rawDescData)
	})
	return file_v1_ingester_ingester_proto_rawDescData
}

var file_v1_ingester_ingester_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_v1_ingester_ingester_proto_goTypes = []interface{}{
	(*BatchCreateRequestMetadatasRequest)(nil),  // 0: k6.cloud.insights.proto.v1.ingester.BatchCreateRequestMetadatasRequest
	(*CreateRequestMetadataRequest)(nil),        // 1: k6.cloud.insights.proto.v1.ingester.CreateRequestMetadataRequest
	(*BatchCreateRequestMetadatasResponse)(nil), // 2: k6.cloud.insights.proto.v1.ingester.BatchCreateRequestMetadatasResponse
	(*BatchCreateSpansRequest)(nil),             // 3: k6.cloud.insights.proto.v1.ingester.BatchCreateSpansRequest
	(*CreateSpanRequest)(nil),                   // 4: k6.cloud.insights.proto.v1.ingester.CreateSpanRequest
	(*BatchCreateSpansResponse)(nil),            // 5: k6.cloud.insights.proto.v1.ingester.BatchCreateSpansResponse
	(*k6.RequestMetadata)(nil),                  // 6: k6.cloud.insights.proto.v1.k6.RequestMetadata
	(*trace.Span)(nil),                          // 7: k6.cloud.insights.proto.v1.trace.Span
}
var file_v1_ingester_ingester_proto_depIdxs = []int32{
	1, // 0: k6.cloud.insights.proto.v1.ingester.BatchCreateRequestMetadatasRequest.Requests:type_name -> k6.cloud.insights.proto.v1.ingester.CreateRequestMetadataRequest
	6, // 1: k6.cloud.insights.proto.v1.ingester.CreateRequestMetadataRequest.RequestMetadata:type_name -> k6.cloud.insights.proto.v1.k6.RequestMetadata
	6, // 2: k6.cloud.insights.proto.v1.ingester.BatchCreateRequestMetadatasResponse.RequestMetadatas:type_name -> k6.cloud.insights.proto.v1.k6.RequestMetadata
	4, // 3: k6.cloud.insights.proto.v1.ingester.BatchCreateSpansRequest.Requests:type_name -> k6.cloud.insights.proto.v1.ingester.CreateSpanRequest
	7, // 4: k6.cloud.insights.proto.v1.ingester.CreateSpanRequest.Span:type_name -> k6.cloud.insights.proto.v1.trace.Span
	7, // 5: k6.cloud.insights.proto.v1.ingester.BatchCreateSpansResponse.Spans:type_name -> k6.cloud.insights.proto.v1.trace.Span
	0, // 6: k6.cloud.insights.proto.v1.ingester.IngesterService.BatchCreateRequestMetadatas:input_type -> k6.cloud.insights.proto.v1.ingester.BatchCreateRequestMetadatasRequest
	3, // 7: k6.cloud.insights.proto.v1.ingester.IngesterService.BatchCreateSpans:input_type -> k6.cloud.insights.proto.v1.ingester.BatchCreateSpansRequest
	2, // 8: k6.cloud.insights.proto.v1.ingester.IngesterService.BatchCreateRequestMetadatas:output_type -> k6.cloud.insights.proto.v1.ingester.BatchCreateRequestMetadatasResponse
	5, // 9: k6.cloud.insights.proto.v1.ingester.IngesterService.BatchCreateSpans:output_type -> k6.cloud.insights.proto.v1.ingester.BatchCreateSpansResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_v1_ingester_ingester_proto_init() }
func file_v1_ingester_ingester_proto_init() {
	if File_v1_ingester_ingester_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_ingester_ingester_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateRequestMetadatasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ingester_ingester_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequestMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ingester_ingester_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateRequestMetadatasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ingester_ingester_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateSpansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ingester_ingester_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_ingester_ingester_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateSpansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_ingester_ingester_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_ingester_ingester_proto_goTypes,
		DependencyIndexes: file_v1_ingester_ingester_proto_depIdxs,
		MessageInfos:      file_v1_ingester_ingester_proto_msgTypes,
	}.Build()
	File_v1_ingester_ingester_proto = out.File
	file_v1_ingester_ingester_proto_rawDesc = nil
	file_v1_ingester_ingester_proto_goTypes = nil
	file_v1_ingester_ingester_proto_depIdxs = nil
}
