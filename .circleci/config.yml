version: 2
jobs:
  lint:
    docker:
      - image: circleci/golang:1.10
    environment:
      GOPATH: /home/circleci/.go_workspace
    working_directory: /home/circleci/.go_workspace/src/github.com/loadimpact/k6
    steps:
      - checkout
      - run:
          name: Check dependencies
          command: |
            export PATH="$GOPATH/bin:$PATH"
            mkdir -p "$GOPATH/bin"
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep status
            dep ensure -update -dry-run
      - run:
          name: Run linter
          command: |
            export PATH=$GOPATH/bin:$PATH
            go get -t ./...
            go get -u github.com/alecthomas/gometalinter
            gometalinter --install
            gometalinter --deadline 10m --config gometalinter.json --vendor ./...

  test:
    docker:
      - image: circleci/golang:1.10
    environment:
      GOPATH: /home/circleci/.go_workspace
    working_directory: /home/circleci/.go_workspace/src/github.com/loadimpact/k6
    steps:
      - checkout
      - run:
          name: Run tests and code coverage
          command: |
            export PATH=$GOPATH/bin:$PATH
            echo "mode: set" > coverage.txt
            for pkg in $(go list ./... | grep -v vendor); do
                go test -race -timeout 600s -coverprofile=$(echo $pkg | tr / -).coverage $pkg
            done
            grep -h -v "^mode:" *.coverage >> coverage.txt
            rm -f *.coverage
            bash <(curl -s https://codecov.io/bash)

  build-docker-images:
    docker:
      - image: circleci/golang:1.10
    environment:
      GOPATH: /home/circleci/.go_workspace
    working_directory: /home/circleci/.go_workspace/src/github.com/loadimpact/k6
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: Setup repo and docker
          command: |
            git submodule update --init
            docker info
            echo "{\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKER_AUTH\",\"email\":\"$DOCKER_EMAIL\"}}" >~/.dockercfg
      - run:
          name: Build application Docker image
          command: |
            docker build -t loadimpact/k6 .
      - run:
          name: Run tests on generated Docker image
          command: |
            docker run loadimpact/k6 --help
            docker run loadimpact/k6 help
            docker run loadimpact/k6 run --help
            docker run loadimpact/k6 inspect --help
            docker run loadimpact/k6 status --help
            docker run loadimpact/k6 stats --help
            docker run loadimpact/k6 scale --help
            docker run loadimpact/k6 pause --help
            docker run loadimpact/k6 resume --help
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker push loadimpact/k6
            elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
              docker tag loadimpact/k6 loadimpact/k6:develop
              docker push loadimpact/k6:develop
            elif [[ "${CIRCLE_TAG}" =~ ^v[0-9]+(\.[0-9]+)*$ ]]; then
              docker tag loadimpact/k6 loadimpact/k6:${CIRCLE_TAG:1}
              docker push loadimpact/k6:${CIRCLE_TAG:1}
            fi

  build-linux-packages:
    docker:
      - image: circleci/golang:1.10
    environment:
      GOPATH: /home/circleci/.go_workspace
    working_directory: /home/circleci/.go_workspace/src/github.com/loadimpact/k6
    steps:
      - checkout
      - run:
          name: Build linux packages
          command: |
            export PATH=$GOPATH/bin:$PATH

            go get github.com/Masterminds/glide
            go get github.com/mh-cbon/go-bin-deb \
              && cd $GOPATH/src/github.com/mh-cbon/go-bin-deb \
              && glide install \
              && go install

            go get github.com/mh-cbon/go-bin-rpm \
              && cd $GOPATHsrc/github.com/mh-cbon/go-bin-rpm \
              && glide install \
              && go install

            sudo apt-get update -y
            sudo apt-get install -y fakeroot rpm

            cd $GOPATH/src/github.com/loadimpact/k6

            echo "Building k6..."
            CGO_ENABLED=0 GOARCH=$ARCH go build -a -ldflags '-s -w' -o /tmp/k6
            echo "Done!"

            VERSION=${CIRCLE_TAG:1} ./packaging/gen-packages.sh

      - deploy:
          name: Publish packages in Bintray
          command: |
            export VERSION=${CIRCLE_TAG:1}
            # Publishing deb
            curl -H "X-GPG-PASSPHRASE: $GPG_PASSPHRASE" -T dist/k6-v$VERSION-amd64.deb "https://$BINTRAY_USER:$BINTRAY_KEY@api.bintray.com/content/loadimpact/deb/k6/$VERSION/k6-v$VERSION-amd64.deb;deb_distribution=stable;deb_component=main;deb_architecture=amd64;publish=1;override=1"
            # Publishing rpm
            curl -H "X-GPG-PASSPHRASE: $GPG_PASSPHRASE" -T dist/k6-v$VERSION-amd64.rpm "https://$BINTRAY_USER:$BINTRAY_KEY@api.bintray.com/content/loadimpact/rpm/k6/$VERSION/k6-v$VERSION-amd64.rpm?publish=1&override=1"
workflows:
  version: 2
  test_and_build:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
      - build-docker-images:
          requires:
            - lint
            - test
      - build-linux-packages:
          requires:
            - lint
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/